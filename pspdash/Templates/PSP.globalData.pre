=============================================================================
== PSP Dashboard - Data Automation Tool for PSP-like processes
== Copyright (C) 1999  United States Air Force
== 
== This program is free software; you can redistribute it and/or
== modify it under the terms of the GNU General Public License
== as published by the Free Software Foundation; either version 2
== of the License, or (at your option) any later version.
== 
== This program is distributed in the hope that it will be useful,
== but WITHOUT ANY WARRANTY; without even the implied warranty of
== MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
== GNU General Public License for more details.
== 
== You should have received a copy of the GNU General Public License
== along with this program; if not, write to the Free Software
== Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
== 
== The author(s) may be contacted at:
== OO-ALC/TISHD
== Attn: PSP Dashboard Group
== 6137 Wardleigh Road
== Hill AFB, UT 84056-5843
== 
== E-Mail POC:  ken.raisor@hill.af.mil

=============================================================================
== Title:	PSP.globalData.pre
== Author:	Dave Tuma -TISHD- <dtuma@ulaf1>
== Created:	Thu Jan  8 16:34:18 1998
==
== Description: This data file collects data from all other datafiles. /*
== 
== This file should be run through the c preprocessor to create the actual
== global data file, "PSP.globalData" */
==
== The file "PSP.globalData" is autogenerated and SHOULD NOT BE EDITED 
== DIRECTLY.  Instead, edit the file "PSP.globalData.pre", and run "make"
== from the pspdash directory.
==

Owner="Enter your name

PSP To Date Data==1.0

#define sumUp(Name) Name To Date==![(+	~/.*/{Completed}{PSP Project}Name)]
#define phasePercent(Phase,Name) Phase/% Name To Date==![(/	Phase/Name To Date	Name To Date)]

==
==  Data Elements to track LOC to Date
==

sumUp(Base LOC)
sumUp(Added LOC)
sumUp(Deleted LOC)
sumUp(Modified LOC)
sumUp(New & Changed LOC)
New & Changed KLOC To Date==![(/	New & Changed LOC To Date	1000)]
sumUp(New Reused LOC)
sumUp(Reused LOC)
sumUp(Total LOC)
KLOC To Date==![(/	LOC To Date	1000)]
LOC per Hour To Date==![(/	New & Changed LOC To Date	Time To Date	0.0166667)]


==
== Data Elements to track Time to Date
==

sumUp(Estimated Time)

sumUp(Planning/Time)
sumUp(High Level Design/Time)
sumUp(High Level Design Review/Time)
sumUp(Design/Time)
sumUp(Design Review/Time)
Design/Combined Time To Date==![(+	Design/Time To Date	Design Review/Time To Date)]
sumUp(Code/Time)
sumUp(Code Review/Time)
Code/Combined Time To Date==![(+	Code/Time To Date	Code Review/Time To Date)]
sumUp(Compile/Time)
sumUp(Test/Time)
=Reassessment-Time To Date==![(+	~/.*/{Completed}{PSP Project}Reassessment/Time)]
Postmortem/Time To Date==![(+	~/.*/{Completed}{PSP Project}Reassessment/Time	~/.*/{Completed}{PSP Project}Postmortem/Time)]
Time To Date==![(+	~[^/]*/Time To Date)]

== % Time To Date

phasePercent(Planning,Time)
phasePercent(High Level Design,Time)
phasePercent(High Level Design Review,Time)
phasePercent(Design,Time)
phasePercent(Design Review,Time)
Design/Combined % Time To Date==![(/	Design/Combined Time To Date	Time To Date)]
phasePercent(Code,Time)
phasePercent(Code Review,Time)
Code/Combined % Time To Date==![(/	Code/Combined Time To Date	Time To Date)]
phasePercent(Compile,Time)
phasePercent(Test,Time)
phasePercent(Reassessment,Time)
phasePercent(Postmortem,Time)


==
== Data Elements to track Defects Injected
==

sumUp(Before Development/Defects Injected)
sumUp(Planning/Defects Injected)
sumUp(High Level Design/Defects Injected)
sumUp(High Level Design Review/Defects Injected)
sumUp(Design/Defects Injected)
sumUp(Design Review/Defects Injected)
Design/Combined Defects Injected To Date==![(+	Design/Defects Injected To Date	Design Review/Defects Injected To Date)]
sumUp(Code/Defects Injected)
sumUp(Code Review/Defects Injected)
Code/Combined Defects Injected To Date==![(+	Code/Defects Injected To Date	Code Review/Defects Injected To Date)]
sumUp(Compile/Defects Injected)
sumUp(Test/Defects Injected)
sumUp(Reassessment/Defects Injected)
sumUp(Postmortem/Defects Injected)
Defects Injected To Date==![(+	~[^B][^/]*/Defects Injected To Date)]
Defects Injected per KLOC To Date==![(/	Defects Injected To Date	New & Changed KLOC To Date)]
Defects per KLOC To Date==![(/	Defects Injected To Date	New & Changed KLOC To Date)]

== % Defects Injected To Date

phasePercent(Before Development,Defects Injected)
phasePercent(Planning,Defects Injected)
phasePercent(High Level Design,Defects Injected)
phasePercent(High Level Design Review,Defects Injected)
phasePercent(Design,Defects Injected)
phasePercent(Design Review,Defects Injected)
Design/Combined % Defects Injected To Date==![(/	Design/Combined Defects Injected To Date	Defects Injected To Date)]
phasePercent(Code,Defects Injected)
phasePercent(Code Review,Defects Injected)
Code/Combined % Defects Injected To Date==![(/	Code/Combined Defects Injected To Date	Defects Injected To Date)]
phasePercent(Compile,Defects Injected)
phasePercent(Test,Defects Injected)
phasePercent(Reassessment,Defects Injected)
phasePercent(Postmortem,Defects Injected)


==
== Data Elements to track Defects Removed
==


sumUp(Planning/Defects Removed)
sumUp(High Level Design/Defects Removed)
sumUp(High Level Design Review/Defects Removed)
sumUp(Design/Defects Removed)
sumUp(Design Review/Defects Removed)
Design/Combined Defects Removed To Date==![(+	Design/Defects Removed To Date	Design Review/Defects Removed To Date)]
sumUp(Code/Defects Removed)
sumUp(Code Review/Defects Removed)
Code/Combined Defects Removed To Date==![(+	Code/Defects Removed To Date	Code Review/Defects Removed To Date)]
sumUp(Compile/Defects Removed)
sumUp(Test/Defects Removed)
sumUp(Reassessment/Defects Removed)
sumUp(Postmortem/Defects Removed)
sumUp(After Development/Defects Removed)
Defects Removed To Date==![(+	~[^/]*/Defects Removed To Date)]

== % Defects Removed To Date

phasePercent(Planning,Defects Removed)
phasePercent(High Level Design,Defects Removed)
phasePercent(High Level Design Review,Defects Removed)
phasePercent(Design,Defects Removed)
phasePercent(Design Review,Defects Removed)
Design/Combined % Defects Removed To Date==![(/	Design/Combined Defects Removed To Date	Defects Removed To Date)]
phasePercent(Code,Defects Removed)
phasePercent(Code Review,Defects Removed)
Code/Combined % Defects Removed To Date==![(/	Code/Combined Defects Removed To Date	Defects Removed To Date)]
phasePercent(Compile,Defects Removed)
phasePercent(Test,Defects Removed)
phasePercent(Reassessment,Defects Removed)
phasePercent(Postmortem,Defects Removed)
phasePercent(After Development,Defects Removed)


==
== Data Elements to calculate Defect Removal Efficiency
==

#define defRemPerHr(Phase) Phase/Defects Removed per Hour To Date==![(/	Phase/Defects Removed To Date	Phase/Time To Date	0.0166667)]
defRemPerHr(High Level Design Review)
defRemPerHr(Design Review)
defRemPerHr(Code Review)
defRemPerHr(Compile)
defRemPerHr(Test)

#define defRemLeverage(Phase) Phase/DRL To Date==![(/	Phase/Defects Removed per Hour To Date	Test/Defects Removed per Hour To Date)]
defRemLeverage(High Level Design Review)
defRemLeverage(Design Review)
defRemLeverage(Code Review)
defRemLeverage(Compile)


==
== Data Elements to Track Overall Process Metrics 
==

#define DRTD(Phase) Phase/Defects Removed To Date
#define DRTDR(Phase) DRTD(Phase)	DRTD(Phase Review)
Yield To Date==![(/	[(+	DRTD(Planning)	DRTDR(High Level Design)	DRTDR(Design)	DRTDR(Code))]	Defects Removed To Date)]

Test/Defects Removed per KLOC To Date==![(/	DRTD(Test)	New & Changed KLOC To Date)]
Defects Removed per KLOC To Date==![(/	Defects Removed To Date	New & Changed KLOC To Date)]
% Appraisal COQ To Date==![(/	[(+	~[^/]* Review/Time To Date)]	Time To Date)]
% Failure COQ To Date==![(/	[(+	Compile/Time To Date	Test/Time To Date)]	Time To Date)]
% New Reused To Date==![(/	New Reused LOC To Date	New & Changed LOC To Date)]
% Reused To Date==![(/	Reused LOC To Date	LOC To Date)]
AFR To Date==![(/	% Appraisal COQ To Date	% Failure COQ To Date)]
CPI To Date==![(/	Estimated Time To Date	Time To Date)]



==
== Define the standard PSP Defect Type Standard
==

Defect Type Standard/PSP - text="Documentation (comments, messages)|Syntax (spelling, punctuation, typos, instruction formats)|Build, package (change management, library, version control)|Assignment (declaration, duplicate names, scope, limits)|Interface (procedure calls and reference, I/O, user formats)|Checking (error messages, inadequate checks)|Data (structure, content)|Function (logic, pointers, loops, recursion, computation, function defects)|System (configuration, timing, memory)|Environment (design, compile, test, or other support system problems)
Defect Type Standard/PSP - numbers="10 (Documentation - comments, messages)|20 (Syntax - spelling, punctuation, typos, instruction formats)|30 (Build, package - change management, library, version control)|40 (Assignment - declaration, duplicate names, scope, limits)|50 (Interface - procedure calls and reference, I/O, user formats)|60 (Checking - error messages, inadequate checks)|70 (Data - structure, content)|80 (Function - logic, pointers, loops, recursion, computation, function defects)|90 (System - configuration, timing, memory)|100 (Environment - design, compile, test, or other support system problems)
