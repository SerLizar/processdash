<?xml version="1.0"?>

<!-- ===================================================================

PSP Dashboard - Data Automation Tool for PSP-like processes
Copyright (C) 2003 Software Process Dashboard Initiative

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

The author(s) may be contacted at:
OO-ALC/TISHD
Attn: PSP Dashboard Group
6137 Wardleigh Road
Hill AFB, UT 84056-5843

E-Mail POC:  processdash-devel@lists.sourceforge.net

========================================================================

   Build file for Process Dashboard

Notes:
   This is a build file for use with the Jakarta Ant build tool.


Prerequisites:

   * jakarta-ant from http://jakarta.apache.org

   * (optional) If you install javahelp on your system and set the
     environment variable "JAVAHELP_HOME", this script will detect
     it and compile in support for context-sensitive help. (Otherwise,
     it will just compile the web browser-based help support.)

   * (optional) To compile support for internet explorer, you must have
     the microsoft compiler and cabarc tool installed and in your path.


Build Instructions:
   To build, run

     ant <target>

   on the directory where this file is located with the target you want.


Most useful targets:

 - jar      - > creates the "pspdash.jar" package in "./build/out"
 - compile  - > recompiles the main dashboard classes


Authors:
  David Tuma, with help and advice from David Li <david@d11e.com>

   $Id$

==================================================================== -->

<project default="dist" basedir=".">

  <property environment="env"/>

  <property name="build"      value="bin"/>
  <property name="dist"       value="dist"/>
  <property name="lib"        value="lib"/>

  <property file="${lib}/version.properties"/>

  <property name="eng.version"     value="1.6.1.1"/><!-- VERSION -->
  <property name="eng.requires"    value="1.6.1.1+"/><!-- VERSION -->

  <property name="version"     value="${dashboard.version}"/>
  <property name="applet.file" value="DataApplet${dashboardVersion}"/>

  <property name="debug"      value="on"/>

  <property name="src"        value="src"/>
  <property name="pspdash"    value="${src}/pspdash"/>
  <property name="processdash" value="${src}/net/sourceforge/processdash"/>
  <property name="data"       value="${processdash}/data"/>
  <property name="compiler"   value="${data}/compiler"/>
  <property name="templates"  value="Templates"/>
  <property name="help"       value="${templates}/help"/>
  <property name="helpsearch" value="${help}/JavaHelpSearch"/>

  <property name="ns.dir" value="${build}/NS"/>
  <property name="ns.jar" value="${build}/Templates/${applet.file}.jar"/>
  <property name="ie.dir" value="${build}/IE"/>
  <property name="ie.cab" value="${build}/Templates/${applet.file}.cab"/>

  <property name="jfreechart.jar" value="${lib}/jfreechart-0.9.13.jar"/>
  <property name="jcommon.jar"    value="${lib}/jcommon-0.8.8.jar"/>



  <property name="build.sysclasspath" value="ignore"/>
  <property name="build.compiler" value="javac1.3"/>

  <path id="build.classpath">
    <pathelement location="${build}"/>
    <pathelement location="${lib}/distlib.jar"/>
    <pathelement location="${lib}/jregex.jar"/>
    <pathelement location="${jfreechart.jar}"/>
    <pathelement location="${jcommon.jar}"/>
  </path>



  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/Templates"/>
    <!-- Check to see if optional packages are present -->
    <available property="javahelp.jhindexerjar"
               file ="${env.JAVAHELP_HOME}/javahelp/bin/jhindexer.jar"
               value="${env.JAVAHELP_HOME}/javahelp/bin/jhindexer.jar"/>
    <available property="javahelp.jhjar"
               file ="${env.JAVAHELP_HOME}/javahelp/lib/jh.jar"
               value="${env.JAVAHELP_HOME}/javahelp/lib/jh.jar"/>
    <available property="commondom.support"
               classname="com.sun.java.browser.dom.DOMService"/>
    <available property="nsobject.support"
               file="${java.home}/lib/jaws.jar"/>
    <available property="nsobject.support"
               file="${java.home}/lib/plugin.jar"/>
  </target>



  <target name="compile" depends="init,parser"
        description="Compile the main dashboard classes" >

    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="${debug}"
           classpathref="build.classpath">
      <include name="net/**/*.java"/>
      <include name="pspdash/**/*.java"/>
      <exclude name="net/sourceforge/processdash/ui/help/DashHelpBroker*.java"/>
      <exclude name="**/*Test.java"/>
      <excludesfile name="${lib}/fileset-applet-only.txt"/>
      <excludesfile name="${lib}/fileset-ns.txt"/>
    </javac>
  </target>



  <target name="javahelp-broker" if="javahelp.jhjar"
          depends="compile,-javahelp-cgi-src" 
          description="Compile the context-sensitive help support">
    <javac srcdir="${src}" destdir="${build}" debug="${debug}">
       <classpath>
         <path refid="build.classpath"/>
         <pathelement location="${javahelp.jhjar}"/>
       </classpath>
       <include name="net/sourceforge/processdash/ui/help/DashHelpBroker*.java"/>
    </javac>
  </target>

  <target name="-javahelp-cgi-src" depends="-javahelp-cgi-src-depend"
          if="javahelp.jhjar" unless="javahelp.cgi.src.upToDate">
    <copy file="${processdash}/ui/help/DashHelpBroker.java"
          tofile="${processdash}/ui/help/DashHelpBrokerCGI.java"/>
    <replace file="${processdash}/ui/help/DashHelpBrokerCGI.java"
          token="DashHelpBroker"
	  value="DashHelpBrokerCGI"/>
  </target>

  <target name="-javahelp-cgi-src-depend">
    <uptodate property="javahelp.cgi.src.upToDate"
              srcfile="${processdash}/ui/help/DashHelpBroker.java"
              targetfile="${processdash}/ui/help/DashHelpBrokerCGI.java"/>
  </target>



  <target name="javahelp-addon" depends="javahelp-broker" if="javahelp.jhjar"
          description="Package up the add-on context-sensitive help support">
    <!-- jar up the contents of the add-on -->
    <jar destfile="${dist}/dashHelp.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Dash-Pkg-ID" value="dashHelp"/>
        <attribute name="Dash-Pkg-Version" value="1.0"/>
        <attribute name="Dash-Pkg-Name"
                   value="JavaHelp(TM) from Sun Microsystems"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <!-- include the bootstrap cgi script -->
      <fileset dir="${build}" includes="**/DashHelpBrokerCGI.class"/>
      <fileset dir="." includes="Templates/help/createBroker.class.link"/>

      <!-- include the contents of the javahelp distribution -->
      <zipfileset src="${javahelp.jhjar}" excludes="META-INF/ meta-inf/"/>
    </jar>
  </target>



  <target name="import-addon">
    <jar destfile="${dist}/importPSP.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Dash-Pkg-ID" value="importPSP"/>
        <attribute name="Dash-Pkg-Version" value="1.2"/>
        <attribute name="Dash-Pkg-Name"
                   value="PSP(SM) Data Import Add-on Process Set"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <fileset dir="${pspdash}">
        <include name="Templates/Import-template.xml"/>
        <include name="Templates/import/dataFile.txt"/>
        <include name="Templates/import/import.htm"/>
      </fileset>
    </jar>
  </target>



  <target name="pspForEng-addon" depends="compile">
    <!-- build the jarfile -->
    <jar destfile="${dist}/pspForEng.jar" duplicate="fail">
      <manifest>
        <attribute name="Dash-Pkg-ID" value="pspForEng"/>
        <attribute name="Dash-Pkg-Version" value="${eng.version}"/>
        <attribute name="Dash-Pkg-Requires-Version" value="${eng.requires}"/>
        <attribute name="Dash-Pkg-Name"
                   value="PSP for Engineers Add-on Process Set"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <fileset dir=".">
        <include name="Templates/pspForEng/"/>
        <include name="Templates/pspForEng*"/>
	<exclude name="Templates/pspForEng/repair.*"/>
      </fileset>
      <fileset dir="${build}" includes="net/**/PspForEngFilter.class"/>
    </jar>
  </target>



  <target name="parser" depends="init,-parser-depend"
          description="Regenerate source code for the parser if necessary."
          unless="parser.upToDate">
    <!-- erase the previously generated compiler classes -->
    <delete quiet="true" dir="${compiler}/lexer"/>
    <delete quiet="true" dir="${compiler}/parser"/>
    <delete quiet="true" dir="${compiler}/node"/>
    <delete quiet="true" dir="${compiler}/analysis"/>
    <!-- run the sablecc code generator -->
    <java classpath="${lib}/sablecc.jar" fork="true"
          classname="org.sablecc.sablecc.SableCC">
      <arg value="-d"/>
      <arg file="${src}"/>
      <arg file="${compiler}/grammar.txt"/>
    </java>
  </target>

  <target name="-parser-depend"
          description="Check to see if the parser needs regenerating.">
    <uptodate property="parser.upToDate"
              srcfile="${compiler}/grammar.txt"
              targetfile="${compiler}/parser/Parser.java"/>
  </target>



  <target name="NSDataApplet" depends="init" if="nsobject.support"
        description="Compile the data applet support for netscape and W3C dom">
    <mkdir dir="${ns.dir}"/>
    <javac srcdir="${src}" destdir="${ns.dir}" debug="${debug}"
           includeAntRuntime="no" includeJavaRuntime="no" target="1.1">
      <bootclasspath>
      </bootclasspath>
      <classpath>
         <pathelement location="${java.home}/lib/jaws.jar"/>
         <pathelement location="${java.home}/lib/plugin.jar"/>
      </classpath>
      <includesfile name="${lib}/fileset-applet-only.txt"/>
      <includesfile name="${lib}/fileset-applet-extra.txt"/>
      <includesfile name="${lib}/fileset-ns.txt"/>
    </javac>
    <!-- fixme...unnecessary?
    <copy file="${pspdash}/timing.wav" todir="${ns.dir}/pspdash"/> -->
    <jar destfile="${ns.jar}" basedir="${ns.dir}" includes="pspdash/ net/"/>
  </target>



  <target name="optional" depends="javahelp-broker,NSDataApplet"/>



  <target name="jar" depends="init,compile,optional,javahelp"
          description="Make the jarfile for distribution">
    <jar destfile="${dist}/pspdash.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Main-Class" value="pspdash.PSPDashboard"/>
        <attribute name="Dash-Pkg-ID" value="pspdash"/>
        <attribute name="Dash-Pkg-Version" value="${version}"/>
        <attribute name="Dash-Pkg-Name" value="Process Dashboard"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <!-- include the compiled files and cgi scripts -->
      <fileset dir="${build}" excludesfile="${lib}/fileset-nonclass.txt">
          <include name="org/"/>
          <include name="pspdash/"/>
          <include name="Templates/"/>
          <include name="net/"/>
	  <exclude name="**/*Test.class"/>
          <exclude name="**/DashHelpBrokerCGI.class"/>
	  <exclude name="net/**/PspForEngFilter.class"/>
      </fileset>

      <!-- include important non-class files in the pspdash directory -->
      <fileset dir="${src}" includesfile="${lib}/fileset-nonclass.txt"/>

      <!-- include the template files -->
      <fileset dir=".">
        <include name="Templates/"/>
        <excludesfile name="${lib}/fileset-template-ignore.txt"/>
      </fileset>

      <!-- include the contents of the libraries we use -->
      <zipfileset src="${jcommon.jar}"/>
      <zipfileset src="${jfreechart.jar}"/>
      <zipfileset src="${lib}/jregex.jar"/>
      <zipfileset src="${lib}/distlib.jar" excludes="**/*.java"/>
    </jar>
  </target>



  <!-- =================================================================== -->
  <!-- Update the JavaHelp                                                 -->
  <!-- =================================================================== -->
  <target name="javahelp"
          depends="init,-javahelp-depend,-javahelp-index,-javahelp-book"/>

  <!-- invoke the jhindexer -->
  <target name="-javahelp-index" depends="init,-javahelp-depend"
          if="javahelp.jhindexerjar" unless="javahelp.upToDate">
    <!-- delete the previous contents of the JavaHelpSearch dir -->
    <delete dir="${helpsearch}" quiet="true"/>
    <mkdir dir="${helpsearch}"/>

    <!-- refresh the help.config file -->
    <pathconvert property=".jhbasedir" pathsep=":" dirsep="/">
      <path id=".jhbasedir.path" path="${help}"/>
    </pathconvert>
    <pathconvert property=".jhfilelist" pathsep=":" dirsep="/">
      <path>
        <fileset dir="${help}" includes="Topics/**/*.html">
	  <exclude name="Topics/Overview/disc-eng.html"/>
	  <exclude name="Topics/AdvancedTopics/ProcessDefinition/DataFileFunctions.html"/>
        </fileset>
      </path>
    </pathconvert>
    <echo message="${.jhfilelist}" file="${help}/help.config"/>
    <replace file="${help}/help.config" token="${.jhbasedir}/" value="File "/>
    <replace file="${help}/help.config">
      <replacetoken>:</replacetoken>
      <replacevalue><![CDATA[
]]></replacevalue>
    </replace>

    <!-- invoke jhindexer to rebuild the help indexes -->
    <java jar="${javahelp.jhindexerjar}" dir="${help}" fork="true">
      <arg value="-c"/>
      <arg value="help.config"/>
    </java>
  </target>

  <!-- regenerate the "book.html" file -->
  <target name="-javahelp-book" depends="-javahelp-depend"
          unless="javahelp.upToDate">
    <xslt in="${help}/TOC.xml" out="${help}/TOC.html"
          style="${help}/makeTOC.xslt"/>
    <xslt in="${help}/TOC.xml" out="${help}/Skeleton.html"
          style="${help}/makeSkeleton.xslt"/>

    <java classpath="${lib}/DocSpider.jar" classname="DocSpider"
          fork="true" dir="${help}">
      <arg value="Skeleton.html"/>
      <arg value="book.html"/>
      <arg value="none"/>
      <arg value="-nostatus"/>
    </java>
    <delete file="${help}/Skeleton.html"/>
  </target>

  <!-- check to see if help needs updating -->
  <target name="-javahelp-depend">
    <uptodate property="javahelp.upToDate" targetfile="${helpsearch}/TMAP">
      <srcfiles dir="${help}">
        <include name="**/*.html"/>
        <include name="**/*.htm"/>
        <include name="*.xml"/>
        <include name="PSPDash.hs"/>
        <exclude name="TOC.html"/>
        <exclude name="Skeleton.html"/>
        <exclude name="book.html"/>
      </srcfiles>
    </uptodate>
  </target>


  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean">
    <delete quiet="true" dir="${build}"/>
    <delete quiet="true" dir="${compiler}/lexer"/>
    <delete quiet="true" dir="${compiler}/parser"/>
    <delete quiet="true" dir="${compiler}/node"/>
    <delete quiet="true" dir="${compiler}/analysis"/>
    <delete quiet="true" file="${processdash}/ui/help/DashHelpBrokerCGI.java"/>

    <delete quiet="true" file="${dist}/pspdash.jar"/>
    <delete quiet="true" file="${dist}/dashHelp.jar"/>
    <delete quiet="true" file="${dist}/importPSP.jar"/>
    <delete quiet="true" file="${dist}/pspForEng.jar"/>
  </target>

  <target name="dist"
      depends="jar,javahelp-addon,import-addon,pspForEng-addon"/>

</project>

<!--

Still missing items:

============================================================
From pspdash/GNUmakefile:

DISABLED_WARNINGS=directory-index,img-alt,extension-attribute,extension-markup,attribute-delimiter

weblint:
        weblint -d $(DISABLED_WARNINGS) Templates | \
        grep -v -f weblint-ignore


-->
