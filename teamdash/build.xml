
<project default="publish" basedir=".">

  <property file="build.properties"/>

  <property name="teamtools.version" value="3.4.0"/>
  <property name="teamtools.requires" value="1.9.3+"/>

  <property name="processdash.dir" value="../processdash"/>
  <property name="pspdash.jar" value="${processdash.dir}/dist/pspdash.jar"/>
  <property name="xmlpull.jar" value="${processdash.dir}/lib/kxml-2.2.1-mod.jar"/>
  <property name="swingx.jar" value="lib/swingx-0.9.1.jar"/>
  <property name="swingx-src.jar" value="lib/swingx-0.9.1-src.zip"/>
  <property name="poi.jar" value="lib/poi-3.0.1-FINAL-20070705.jar"/>
  <property name="TeamProcessCGI.jar"
      value="Templates/team/lib/TeamProcessCGI.jar"/>
  <property name="server.dir" value="generateProcess"/>
  <property name="server.jar" value="generateProcess.jar"/>
  <property name="jnlp.jar" value="FrameworkEditorJNLP.jar"/>
  <property environment="env"/>


  <!-- if the "noBuild" property is set, set all other noBuild vars too -->
  <target name="-noBuild-init" if="noBuild">
    <property name="noBuild.filelist" value="true"/>
    <property name="noBuild.server" value="true"/>
    <property name="noBuild.TeamTools" value="true"/>
    <property name="noBuild.TeamProcess" value="true"/>
    <property name="noBuild.TeamProcessCGI" value="true"/>
  </target>


  <target name="-defaultValues">
    <property name="teamProcess.xml" value="PDSSD.xml"/>
    <property name="teamProcess.zip" value="PDSSD.zip"/>
  </target>

  <target name="tsp">
    <property name="teamProcess.xml" value="tsp/settings.xml"/>
    <property name="teamProcess.zip" value="TSP-v1.zip"/>
    <property name="install-flags" value="pspForEng"/>
    <property name="cd-qualifier" value="tsp"/>
  </target>

  <target name="vvis">
    <property name="teamProcess.xml" value="vvis.xml"/>
    <property name="teamProcess.zip" value="VVGDP-v2.zip"/>
    <property name="install-flags" value="pspForEng"/>
  </target>

  <target name="vvis1">
    <property name="teamProcess.xml" value="vvis-v1.xml"/>
    <property name="teamProcess.zip" value="VVGDP-v1.zip"/>
  </target>



  <target name="filelist.txt"
          depends="-noBuild-init" unless="noBuild.filelist">
    <pathconvert property=".filelistbasedir" pathsep="," dirsep="/">
      <path id=".jhbasedir.path" path="Templates/team/setup"/>
    </pathconvert>
    <pathconvert property=".filelist" pathsep="," dirsep="/">
      <path>
        <fileset dir="Templates/team/setup" includes="*.shtm,*.link" excludes="*sizeForm*"/>
      </path>
    </pathconvert>
    <property name="filelist" value="Templates/team/setup/filelist.txt"/>
    <echo message="&lt;!--#set var='Wizard_File_List' value='LIST=,${.filelist},' --&gt;&#13;&#10;" file="${filelist}"/>
    <replace file="${filelist}" token="${.filelistbasedir}/" value=""/>
  </target>


  <target name="TeamProcessCGI"
          depends="-noBuild-init" unless="noBuild.TeamProcessCGI">
    <!-- Create a signed jarfile of cgi scripts -->  
    <jar destfile="${TeamProcessCGI.jar}" duplicate="fail">
      <fileset dir="bin">
        <include name="teamdash/templates/setup/"/>
        <include name="teamdash/FilenameMapper*"/>
      </fileset>
    </jar>
    <antcall target="signjar">
      <param name="sign.jar" value="${TeamProcessCGI.jar}"/>
      <param name="sign.alias" value="processdash-full-permissions"/>
    </antcall>
  </target>


  <target name="server" depends="-noBuild-init,TeamProcessCGI,filelist.txt"
      unless="noBuild.server"
      description="Build a JAR file to deploy to the server, where the custom process generator will run">

    <!-- compute the classes needed for the custom process servlet -->
    <classfileset id="servletClasses" dir="bin">
      <root classname="teamdash.process.CustomProcessServlet"/>
      <root classname="teamdash.process.GenerateProcess"/>
    </classfileset>

    <!-- also compute the classes needed from processdash packages -->
    <classfileset id="servletDashClasses" dir="${processdash.dir}/antbin">
      <root classname="net.sourceforge.processdash.net.http.HTMLPreprocessor"/>
      <root classname="net.sourceforge.processdash.process.PhaseUtil"/>
      <root classname="net.sourceforge.processdash.ui.lib.ProgressDialog"/>
    </classfileset>

    <jar destfile="${server.jar}" duplicate="fail">
      <!-- include the compiled files -->
      <fileset refid="servletClasses"/>
      <fileset refid="servletDashClasses"/>
      <zipfileset src="${xmlpull.jar}"/>
    </jar>

    <mkdir dir="${server.dir}"/>
    <sync todir="${server.dir}">
      <!-- include the templates -->
      <fileset dir=".">
        <include name="Templates/team/lib/" />
        <exclude name="Templates/team/lib/todo.txt" />
        <include name="Templates/team/tools/*.link" />
        <include name="Templates/team/tools/*.shtm" />
        <include name="Templates/team/setup/*.link" />
        <include name="Templates/team/setup/*.shtm" />
        <include name="Templates/team/setup/filelist.txt" />
      </fileset>
      <fileset dir="${processdash.dir}" includes="Templates/style.css"/>
    </sync>
  </target>


  <target name="jnlp-jar" 
       description="Build the JAR file for the JNLP framework editor app">
    <classfileset id="jnlpClasses" dir="bin"
      rootclass="teamdash.process.CustomProcessEditorJNLP"/>
    <jar destfile="${jnlp.jar}" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Main-Class" 
              value="teamdash.process.CustomProcessEditorJNLP"/>
      </manifest>
      <fileset refid="jnlpClasses"/>
    </jar>
    <signjar jar="${jnlp.jar}" alias="tuma-solutions-2008"
	storepass="${env.TDKSPW}"/>
  </target>



  <target name="TeamTools"
          depends="-noBuild-init" unless="noBuild.TeamTools">
    <!-- compute the classes needed for the team tools jar file -->
    <classfileset id="teamToolsClasses" dir="bin">
      <root classname="teamdash.wbs.WBSEditor"/>
      <root classname="teamdash.templates.tools.OpenWBSEditor"/>
      <root classname="teamdash.FilenameMapperExtResMgr"/>
    </classfileset>

    <!-- also compute the classes needed from processdash packages -->
    <classfileset id="dashClasses" dir="${processdash.dir}/antbin">
      <root classname="net.sourceforge.processdash.util.HTMLUtils"/>
      <root classname="net.sourceforge.processdash.util.PreferencesUtils"/>
      <root classname="net.sourceforge.processdash.util.RobustFileWriter"/>
      <root classname="net.sourceforge.processdash.util.RuntimeUtils"/>
      <root classname="net.sourceforge.processdash.util.StringUtils"/>
      <root classname="net.sourceforge.processdash.ui.macosx.MacGUIUtils"/>
    </classfileset>

    <!-- count the number of processdash classes we are using -->
    <pathconvert property="dashClasses.count" refid="dashClasses" pathsep="">
      <mapper type="merge" to="X"/>
    </pathconvert>
    <condition property="dashClasses.overflowing">
      <length string="${dashClasses.count}" when="greater" length="14"/>
    </condition>

    <!-- abort if the processdash class list was larger than expected -->
    <pathconvert property="dashClasses.list" refid="dashClasses" 
        pathsep="&#10;    ">
      <regexpmapper from=".*/antbin/(.*).class" to="\1" handledirsep="true"/>
    </pathconvert>
    <fail if="dashClasses.overflowing">
Unexpected number of processdash classes referenced by TeamTools.jar
(Perhaps a runaway class dependency has been added in a dashboard class?)
    ${dashClasses.list}
    </fail>

    <!-- Determine whether to exclude libs that are not GPLv2 compatible -->
    <condition property="gpl.exclude" value="**/" else="none">
      <isset property="GPLv2"/>
    </condition>

    <!-- Now build the TeamTools.jar file -->
    <jar destfile="TeamTools.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Main-Class" value="teamdash.wbs.WBSEditor"/>
	<attribute name="Dash-Pkg-ID" value="teamTools"/>
	<attribute name="Dash-Pkg-Version" value="${teamtools.version}"/>
	<attribute name="Dash-Pkg-Requires-Version"
                   value="${teamtools.requires}"/>
	<attribute name="Dash-Pkg-Name" value="Advanced Team Tools"/>
	<attribute name="Dash-Pkg-URL"
	           value="http://processdash.sourceforge.net/cgi-bin/update"/>
	<attribute name="Implementation-Version" value="${teamtools.version}"/>
      </manifest>

      <!-- include the compiled files -->
      <fileset refid="teamToolsClasses"/>
      <fileset dir="bin">
        <include name="teamdash/wbs/excel/"/>
        <include name="teamdash/**/*.png"/>
        <include name="teamdash/**/*.gif"/>
        <include name="teamdash/**/default-user-settings.txt"/>
      </fileset>
      <fileset refid="dashClasses"/>

      <!-- include the wbs-editor-related templates -->
      <fileset dir=".">
        <include name="Templates/team/tools/index.shtm" />
        <include name="Templates/team/tools/OpenWBSEditor.class.link" />
        <include name="Templates/team/tools/TeamTools.jar.link" />
      </fileset>

      <!-- include files from libraries we use -->
      <zipfileset src="${swingx.jar}"
          includes="org/jdesktop/swingx/autocomplete/"/>
      <zipfileset src="${swingx-src.jar}">
        <include name="swingx-src/COPYING"/>
        <include name="swingx-src/src/java/org/jdesktop/swingx/autocomplete/"/>
      </zipfileset>
      <zipfileset src="${poi.jar}" excludes="${gpl.exclude}"/>
    </jar>

    <antcall target="signjar">
        <param name="sign.jar" value="TeamTools.jar"/>
	<param name="sign.alias" value="tuma-solutions-2008"/>
    </antcall>
  </target>

  <target name="TeamProcess" depends="-defaultValues,-noBuild-init,server"
          unless="noBuild.TeamProcess">
    <java classname="teamdash.process.GenerateProcess" fork="true">
      <classpath>
        <pathelement location="${server.dir}"/>
        <pathelement location="${server.jar}"/>
      </classpath>
      <arg value="${teamProcess.xml}"/>
      <arg value="."/>
    </java>
  </target>

  <target name="-installer-props">
    <pathconvert property="teamdash.dir" dirSep="/">
      <path><pathelement location="."/></path>
    </pathconvert>
    <loadfile property="extraResources" srcFile="install/resources.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <loadfile property="extraPacks" srcFile="install/packs.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>

    <property name="installerExtraIni" value=""/>
    <loadfile property="extraIni" srcFile="install/custom-install.ini">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <loadfile property="extraCoreFiles" srcFile="install/extraCore.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <property name="install-flags" value=""/>
    <property name="cd-qualifier" value="team"/>
  </target>

  <target name="installer" depends="TeamTools,TeamProcess,-installer-props">

    <ant antfile="${processdash.dir}/installer/build.xml" inheritAll="false"
         target="web">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="${teamdash.dir}"/>
      <property name="install.flags" value="${install-flags}"/>
      <property name="additional.resources" value="${extraResources}"/>
      <property name="additional.packs" value="${extraPacks}"/>
      <property name="custom-install.extra" value="${extraIni}"/>
      <property name="additional.core.files" value="${extraCoreFiles}"/>
    </ant>

    <ant antfile="${processdash.dir}/installer/build.xml" inheritAll="false"
         target="offline">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="${teamdash.dir}"/>
      <property name="install.flags" value="${install-flags}"/>
      <property name="additional.resources" value="${extraResources}"/>
      <property name="additional.packs" value="${extraPacks}"/>
      <property name="custom-install.extra" value="${extraIni}"/>
      <property name="additional.core.files" value="${extraCoreFiles}"/>
    </ant>
  </target>

  <target name="installer-cd" depends="TeamTools,TeamProcess,-installer-props">
    <ant antfile="${processdash.dir}/installer/build.xml" inheritAll="false"
         target="dist-CD">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="${teamdash.dir}"/>
      <property name="install.flags" value="${install-flags}"/>
      <property name="additional.resources" value="${extraResources}"/>
      <property name="additional.packs" value="${extraPacks}"/>
      <property name="custom-install.extra" value="${extraIni}"/>
      <property name="additional.core.files" value="${extraCoreFiles}"/>
      <property name="qualifier" value="${cd-qualifier}"/>
    </ant>
  </target>

  <target name="publish" depends="TeamProcess">
    <copy todir="${processdash.dir}/dist">
      <fileset dir="." includes="${teamProcess.zip} TeamTools.jar"/>
    </copy>
  </target>

  <target name="vvis-dist">
    <!-- build version 1 of the VVGDP -->
    <antcall target="TeamProcess">
      <param name="teamProcess.xml" value="vvis-v1.xml"/>
    </antcall>
    <!-- build version 2 of the VVGDP, and the installer -->
    <property name="teamProcess.xml" value="vvis.xml"/>
    <property name="teamProcess.zip" value="VVGDP-v2.zip"/>
    <property name="install-flags" value="pspForEng"/>
    <property name="cd-qualifier" value="vvis"/>
    <pathconvert property="teamdash.dir" dirSep="/">
      <path><pathelement location="."/></path>
    </pathconvert>
    <loadfile property="extraCoreFiles" srcFile="install/vvisCore.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <antcall target="installer-cd"/>
  </target>

  <target name="dist" depends="installer-cd"/>
  <target name="dist-all" depends="installer-cd"/>
  <target name="os-dist" depends="installer-cd"/>
  <target name="tsp-dist" depends="tsp,installer-cd"/>

  <target name="signjar" if="env.TDKSPW">
    <exec executable="c:/java/jdk1.4.2/bin/jarsigner.exe">
        <arg value="-storepass"/>
        <arg value="${env.TDKSPW}"/>
        <arg value="${sign.jar}"/>
        <arg value="${sign.alias}"/>
    </exec>
  </target>

</project>
