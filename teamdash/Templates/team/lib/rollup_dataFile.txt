// <!--#echo var="-*- mode:html -*-" -->
// Data file for a rollup dataset for <!--#echo Full_Name -->
//

#include <ROLLUP:<!--#echo Process_ID -->>;
undefine([Historical Data Tag]);
[Exclude Children of Rollup_List for Defects] = tag;

/*
 * We need to redefine the rollup project list to include PSP projects.
 */
[/PSP/Project List] = search("/", "PSP Rollup Eligible");
[/<!--#echo Process_ID -->/Full Project List] =
    setUnion([/<!--#echo Process_ID -->/Project List], [/PSP/Project List]);
[Rollup_List] =
    filter(eval([Rollup_Filter], [_]), [/<!--#echo Process_ID -->/Full Project List]);


/*
 * Define a rollup filter that is appropriate for data rollup instances.
 * Team and master project datafiles will override this definition.
 */
[Rollup_WBS_ID_Filter] = "," & inherit("Project_ID") & ",";
[Rollup_Filter_Regexp] =
    "m\n^(\\Q" & join("\\E|\\Q", [Rollup_WBS_ID_Filter]) & "\\E)(/.+)?$\n";
[Rollup_Filter] = "match([{Rollup_Filter_Regexp}], [Project_WBS_ID])";


/*
 * Count the number of distinct software projects in this rollup list.
 */
[Software_Project_List] =
    filter(indirect([_] &/ "New & Changed LOC") > 0, [Rollup_List]);
[Software_Project_Count] = count([Software_Project_List]);


/*
 * Calculate % Defect Free metrics for each failure phase.
 */

<!--#foreach name=Phase list=Phase_List #-->
<!--#if Phase_Is_Failure #-->

[<!--#echo Phase_Name -->/% Defect Free] = count(filter(
    !(indirect([_] &/ "<!--#echo Phase_Name -->/Defects Removed") > 0),
    [Software_Project_List])) / [Software_Project_Count];

<!--#endif--><!--#endfor-->
