
<project default="publish" basedir=".">

  <property name="processdash.dir" value="../processdash"/>
  <property name="pspdash.jar" value="${processdash.dir}/dist/pspdash.jar"/>
  <property name="TeamProcessCGI.jar"
      value="Templates/team/lib/TeamProcessCGI.jar"/>
  <property name="server.jar" value="generateProcess.jar"/>
  <property name="jnlp.jar" value="FrameworkEditorJNLP.jar"/>

  <target name="-defaultValues">
    <property name="teamProcess.xml" value="PDSSD.xml"/>
    <property name="teamProcess.zip" value="PDSSD.zip"/>
  </target>

  <target name="tsp">
    <property name="teamProcess.xml" value="tsp/settings.xml"/>
    <property name="teamProcess.zip" value="TSP-v1.zip"/>
    <property name="install-flags" value="pspForEng"/>
    <property name="cd-qualifier" value="tsp"/>
  </target>

  <target name="vvis">
    <property name="teamProcess.xml" value="vvis.xml"/>
    <property name="teamProcess.zip" value="VVGDP-v2.zip"/>
    <property name="install-flags" value="pspForEng"/>
  </target>

  <target name="vvis1">
    <property name="teamProcess.xml" value="vvis-v1.xml"/>
    <property name="teamProcess.zip" value="VVGDP-v1.zip"/>
  </target>



  <target name="filelist.txt" unless="noBuild">
    <pathconvert property=".filelistbasedir" pathsep="," dirsep="/">
      <path id=".jhbasedir.path" path="Templates/team/setup"/>
    </pathconvert>
    <pathconvert property=".filelist" pathsep="," dirsep="/">
      <path>
        <fileset dir="Templates/team/setup" includes="*.shtm,*.link" excludes="*sizeForm*"/>
      </path>
    </pathconvert>
    <property name="filelist" value="Templates/team/setup/filelist.txt"/>
    <echo message="&lt;!--#set var='Wizard_File_List' value='LIST=,${.filelist},' --&gt;&#13;&#10;" file="${filelist}"/>
    <replace file="${filelist}" token="${.filelistbasedir}/" value=""/>
  </target>


  <target name="TeamProcessCGI" unless="noBuild">
    <!-- Create a signed jarfile of cgi scripts -->  
    <jar destfile="${TeamProcessCGI.jar}" duplicate="fail">
      <fileset dir="bin">
        <include name="teamdash/templates/setup/"/>
        <include name="teamdash/FilenameMapper*"/>
      </fileset>
    </jar>
    <property environment="env"/>
    <signjar jar="${TeamProcessCGI.jar}" alias="processdash-full-permissions"
	storepass="${env.TDKSPW}"/>
  </target>


  <target name="server" depends="TeamProcessCGI,filelist.txt"
      description="Build a JAR file to deploy to the server, where the custom process generator will run">
    <jar destfile="${server.jar}" duplicate="fail">
      <!-- include the compiled files -->
      <fileset dir="bin">
        <include name="teamdash/**/*.class"/>
        <include name="teamdash/**/*.png"/>
        <include name="teamdash/**/*.gif"/>
        <exclude name="teamdash/templates/setup/"/>
      </fileset>

      <!-- include the templates -->
      <fileset dir=".">
        <include name="Templates/team/lib/" />
        <exclude name="Templates/team/lib/todo.txt" />
        <include name="Templates/team/tools/*.link" />
        <include name="Templates/team/tools/*.shtm" />
        <include name="Templates/team/setup/*.link" />
        <include name="Templates/team/setup/*.shtm" />
        <include name="Templates/team/setup/filelist.txt" />
      </fileset>
    </jar>
  </target>


  <target name="jnlp-jar" 
       description="Build the JAR file for the JNLP framework editor app">
    <classfileset id="jnlpClasses" dir="bin"
      rootclass="teamdash.process.CustomProcessEditorJNLP"/>
    <jar destfile="${jnlp.jar}" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Main-Class" 
              value="teamdash.process.CustomProcessEditorJNLP"/>
      </manifest>
      <fileset refid="jnlpClasses"/>
    </jar>
    <property environment="env"/>
    <signjar jar="${jnlp.jar}" alias="tuma-solutions"
	storepass="${env.TDKSPW}"/>
  </target>



  <target name="TeamTools" unless="noBuild">
    <!-- compute the classes needed for the team tools jar file -->
    <classfileset id="teamToolsClasses" dir="bin">
      <root classname="teamdash.wbs.WBSEditor"/>
      <root classname="teamdash.templates.tools.OpenWBSEditor"/>
      <root classname="teamdash.FilenameMapperExtResMgr"/>
    </classfileset>

    <!-- also compute the classes needed from processdash packages -->
    <classfileset id="dashClasses" dir="${processdash.dir}/antbin">
      <root classname="net.sourceforge.processdash.util.PreferencesUtils"/>
      <root classname="net.sourceforge.processdash.util.RobustFileWriter"/>
      <root classname="net.sourceforge.processdash.util.RuntimeUtils"/>
      <root classname="net.sourceforge.processdash.util.StringUtils"/>
    </classfileset>

    <!-- count the number of processdash classes we are using -->
    <pathconvert property="dashClasses.count" refid="dashClasses" pathsep="">
      <mapper type="merge" to="X"/>
    </pathconvert>
    <condition property="dashClasses.overflowing">
      <length string="${dashClasses.count}" when="greater" length="10"/>
    </condition>

    <!-- abort if the processdash class list was larger than expected -->
    <pathconvert property="dashClasses.list" refid="dashClasses" 
        pathsep="&#10;    ">
      <regexpmapper from=".*/antbin/(.*).class" to="\1" handledirsep="true"/>
    </pathconvert>
    <fail if="dashClasses.overflowing">
Unexpected number of processdash classes referenced by TeamTools.jar
(Perhaps a runaway class dependency has been added in a dashboard class?)
    ${dashClasses.list}
    </fail>

    <!-- Now build the TeamTools.jar file -->
    <jar destfile="TeamTools.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Main-Class" value="teamdash.wbs.WBSEditor"/>
	<attribute name="Dash-Pkg-ID" value="teamTools"/>
	<attribute name="Dash-Pkg-Version" value="2.4.1"/>
	<attribute name="Dash-Pkg-Requires-Version" value="1.7.rc1+"/>
	<attribute name="Dash-Pkg-Name" value="Advanced Team Tools"/>
	<attribute name="Dash-Pkg-URL"
	           value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <!-- include the compiled files -->
      <fileset refid="teamToolsClasses"/>
      <fileset dir="bin">
        <include name="teamdash/**/*.png"/>
        <include name="teamdash/**/*.gif"/>
      </fileset>
      <fileset refid="dashClasses"/>

      <!-- include the wbs-editor-related templates -->
      <fileset dir=".">
        <include name="Templates/team/tools/index.shtm" />
        <include name="Templates/team/tools/OpenWBSEditor.class.link" />
        <include name="Templates/team/tools/TeamTools.jar.link" />
      </fileset>
    </jar>

    <property environment="env"/>
    <signjar jar="TeamTools.jar" alias="tuma-solutions"
	storepass="${env.TDKSPW}"/>
  </target>

  <target name="TeamProcess" depends="-defaultValues,server" unless="noBuild">
    <java classname="teamdash.process.GenerateProcess" fork="true">
      <classpath>
        <pathelement location="${server.jar}"/>	
        <pathelement location="${pspdash.jar}"/>
      </classpath>
      <arg value="${teamProcess.xml}"/>
      <arg value="."/>
    </java>
  </target>

  <target name="-installer-props">
    <pathconvert property="teamdash.dir" dirSep="/">
      <path><pathelement location="."/></path>
    </pathconvert>
    <loadfile property="extraResources" srcFile="install/resources.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <loadfile property="extraPacks" srcFile="install/packs.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <loadfile property="extraIni" srcFile="install/custom-install.ini">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <property name="extraCoreFiles" value=""/>
    <property name="install-flags" value=""/>
    <property name="cd-qualifier" value="team"/>
  </target>

  <target name="installer" depends="TeamTools,TeamProcess,-installer-props">

    <ant antfile="${processdash.dir}/installer/build.xml" inheritAll="false"
         target="web">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="${teamdash.dir}"/>
      <property name="install.flags" value="${install-flags}"/>
      <property name="additional.resources" value="${extraResources}"/>
      <property name="additional.packs" value="${extraPacks}"/>
      <property name="custom-install.extra" value="${extraIni}"/>
      <property name="additional.core.files" value="${extraCoreFiles}"/>
    </ant>

    <ant antfile="${processdash.dir}/installer/build.xml" inheritAll="false"
         target="offline">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="${teamdash.dir}"/>
      <property name="install.flags" value="${install-flags}"/>
      <property name="additional.resources" value="${extraResources}"/>
      <property name="additional.packs" value="${extraPacks}"/>
      <property name="custom-install.extra" value="${extraIni}"/>
      <property name="additional.core.files" value="${extraCoreFiles}"/>
    </ant>
  </target>

  <target name="installer-cd" depends="TeamTools,TeamProcess,-installer-props">
    <ant antfile="${processdash.dir}/installer/build.xml" inheritAll="false"
         target="dist-CD">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="${teamdash.dir}"/>
      <property name="install.flags" value="${install-flags}"/>
      <property name="additional.resources" value="${extraResources}"/>
      <property name="additional.packs" value="${extraPacks}"/>
      <property name="custom-install.extra" value="${extraIni}"/>
      <property name="additional.core.files" value="${extraCoreFiles}"/>
      <property name="qualifier" value="${cd-qualifier}"/>
    </ant>
  </target>

  <target name="publish" depends="TeamProcess">
    <copy todir="${processdash.dir}/dist">
      <fileset dir="." includes="${teamProcess.zip} TeamTools.jar"/>
    </copy>
  </target>

  <target name="vvis-dist">
    <!-- build version 1 of the VVGDP -->
    <antcall target="TeamProcess">
      <param name="teamProcess.xml" value="vvis-v1.xml"/>
    </antcall>
    <!-- build version 2 of the VVGDP, and the installer -->
    <property name="teamProcess.xml" value="vvis.xml"/>
    <property name="teamProcess.zip" value="VVGDP-v2.zip"/>
    <property name="install-flags" value="pspForEng"/>
    <property name="cd-qualifier" value="vvis"/>
    <pathconvert property="teamdash.dir" dirSep="/">
      <path><pathelement location="."/></path>
    </pathconvert>
    <loadfile property="extraCoreFiles" srcFile="install/vvisCore.xml">
      <filterchain><expandproperties/></filterchain>
    </loadfile>
    <antcall target="installer-cd"/>
  </target>

  <target name="dist" depends="installer"/>
  <target name="dist-all" depends="installer"/>

</project>
