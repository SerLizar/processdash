/* -*- mode:c -*-
=============================================================================
== Process Dashboard - Data Automation Tool for high-maturity processes
== Copyright (C) 2002-2009 Tuma Solutions, LLC
== 
== This program is free software; you can redistribute it and/or
== modify it under the terms of the GNU General Public License
== as published by the Free Software Foundation; either version 3
== of the License, or (at your option) any later version.
==
== Additional permissions also apply; see the README-license.txt
== file in the project root directory for more information.
== 
== This program is distributed in the hope that it will be useful,
== but WITHOUT ANY WARRANTY; without even the implied warranty of
== MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
== GNU General Public License for more details.
== 
== You should have received a copy of the GNU General Public License
== along with this program; if not, see <http://www.gnu.org/licenses/>.
== 
== The author(s) may be contacted at:
==     processdash@tuma-solutions.com
==     processdash-devel@lists.sourceforge.net
*/


[Size Estimating Template Tag] = TAG;

/*
 * Record a metric to hold size units - but make it read-only until we
 * can support arbitrary user-defined size metrics.
 */

[Size Units] == "LOC";


/*
 * Dynamic lists of user-entered data.
 */

[Base_Parts_List] = "0";
[Base_Additions_List] = null;
[New_Objects_List] = "0";
[Reused_Objects_List] = "0";

[Base_Parts_Prefix_List] =
        map([^] &/ "Base_Parts" &/ [_], [Base_Parts_List]);
[Base_Additions_Prefix_List] =
        map([^] &/ "Base Additions" &/ [_], [Base_Additions_List]);
[New_Objects_Prefix_List] =
        map([^] &/ "New Objects" &/ [_], [New_Objects_List]);
[Reused_Objects_Prefix_List] =
        map([^] &/ "Reused Objects" &/ [_], [Reused_Objects_List]);


/*
 * Data Elements to track Estimated LOC.
 */

[Estimated New & Changed LOC] = ?NaN;

[Base_Parts/0/Base]     = 0;
[Base_Parts/0/Deleted]  = 0;
[Base_Parts/0/Modified] = 0;
[Base_Parts/0/Added]    = 0;
[Reused Objects/0/LOC]  = 0;


[Estimated Base LOC]           = sumFor("Base",     [Base_Parts_Prefix_List]);
[Estimated Deleted LOC]        = sumFor("Deleted",  [Base_Parts_Prefix_List]);
[Estimated Modified LOC]       = sumFor("Modified", [Base_Parts_Prefix_List]);
[Estimated Base Added LOC]     = sumFor("Added",    [Base_Parts_Prefix_List]);
[Estimated Base Additions LOC] = sumFor("LOC",  [Base_Additions_Prefix_List]);
[Estimated New Objects LOC]    = sumFor("LOC",     [New_Objects_Prefix_List]);
[Estimated Reused LOC]         = sumFor("LOC",  [Reused_Objects_Prefix_List]);
[Estimated New Reused LOC] = 0 + sumFor("LOC",
        filter(lookup([_] &/ "New Reused?"), [New_Objects_Prefix_List]));

[Estimated Additions LOC] = [Estimated Base Additions LOC] +
                            [Estimated Base Added LOC] +
                            [Estimated New Objects LOC];

[Estimated Proxy Size] = [Estimated Object LOC];
[Estimated Object LOC] = [Estimated Base Additions LOC] +
                         [Estimated Base Added LOC] +
                         [Estimated New Objects LOC] +
                         [Estimated Modified LOC];
[Estimated Added LOC] =
        [Estimated New & Changed LOC] - [Estimated Modified LOC];

[Estimated Total LOC] = [Estimated Base LOC] + [Estimated Reused LOC]
        + [Estimated New & Changed LOC] - [Estimated Modified LOC]
        - [Estimated Deleted LOC];

[Estimated Max LOC] = [Estimated New & Changed LOC/UPI];
[Estimated Min LOC] = [Estimated New & Changed LOC/LPI];
[Estimated New & Changed KLOC] = [Estimated New & Changed LOC] / 1000;
[Estimated New & Changed LOC/Beta0] = 0;
[Estimated New & Changed LOC/Beta1] = 0;
[Estimated New & Changed LOC/Range] = 0;
[Estimated New & Changed LOC/UPI] = 0;
[Estimated New & Changed LOC/LPI] = 0;
[Estimated Total LOC/Range] = [Estimated New & Changed LOC/Range];
[Estimated New & Changed LOC/Interval Percent] = 0;
[Estimated New & Changed LOC/Probe Method] = "D  ";
[Estimated New & Changed LOC/R Squared] = 0;

// To support the change in terminology, create aliases for several
// PROBE-related data elements

#define aliasProbe(Attribute)                                            \
  [Estimated Added & Modified Size/Attribute] =                          \
        [Estimated New & Changed LOC/Attribute];

aliasProbe(Beta0);
aliasProbe(Beta1);
aliasProbe(Range);
aliasProbe(UPI);
aliasProbe(LPI);
aliasProbe(Interval Percent);
aliasProbe(Probe Method);
aliasProbe(R Squared);



/*
 * Data Elements to track Actual LOC
 */

[Base_Parts/0/Actual Base]     = 0;
[Base_Parts/0/Actual Deleted]  = 0;
[Base_Parts/0/Actual Modified] = 0;
[Base_Parts/0/Actual Added]    = 0;
[Reused Objects/0/Actual LOC]  = 0;

[Total LOC]    = ?NaN;


[Base LOC]     = sumFor("Actual Base",     [Base_Parts_Prefix_List]);
[Deleted LOC]  = sumFor("Actual Deleted",  [Base_Parts_Prefix_List]);
[Modified LOC] = sumFor("Actual Modified", [Base_Parts_Prefix_List]);

[New & Changed LOC] = [Added LOC] + [Modified LOC];
[Added LOC] = [Total LOC] - [Base LOC] + [Deleted LOC] - [Reused LOC];

[Base Added LOC]     = sumFor("Actual Added",   [Base_Parts_Prefix_List]);
[Base Additions LOC] = sumFor("Actual LOC", [Base_Additions_Prefix_List]);
[New Objects LOC]    = sumFor("Actual LOC",    [New_Objects_Prefix_List]);
[Reused LOC]         = sumFor("Actual LOC", [Reused_Objects_Prefix_List]);
[New Reused LOC] = 0 + sumFor("Actual LOC",
       filter(lookup([_] &/ "Actual New Reused?"), [New_Objects_Prefix_List]));

[Object LOC] = [Base Added LOC] + [Base Additions LOC] +
               [Modified LOC] + [New Objects LOC];

[New & Changed KLOC] = [New & Changed LOC] / 1000;

/*
 * Data elements for PROBE-estimated time values
 */

[Estimated Max Time] = [Estimated Time/UPI];
[Estimated Min Time] = [Estimated Time/LPI];

[Estimated Time/Beta0] = 0;
[Estimated Time/Beta1] = 0;
[Estimated Time/Range] = 0;
[Estimated Time/UPI] = 0;
[Estimated Time/LPI] = 0;
[Estimated Time/Interval Percent] = 0;
[Estimated Time/Probe Method] = "D  ";
[Estimated Time/R Squared] = 0;
