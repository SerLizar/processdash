<?xml version="1.0"?>

<!-- ===================================================================

PSP Dashboard - Data Automation Tool for PSP-like processes
Copyright (C) 1999  United States Air Force

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

The author(s) may be contacted at:
OO-ALC/TISHD
Attn: PSP Dashboard Group
6137 Wardleigh Road
Hill AFB, UT 84056-5843

E-Mail POC:  ken.raisor@hill.af.mil

========================================================================

   Build file for Process Dashboard

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   To build, run

     java org.apache.tools.ant.Main <target>

   on the directory where this file is located with the target you want.

Most useful targets:

 - compile  -> creates the "soap.jar" package in "./build/lib"
 - javadocs -> creates the javadocs in "./build/javadocs"
 - dist     -> creates the complete binary distribution

Authors:
  David Tuma, with help and advice from David Li <david@d11e.com>

   $Id$

==================================================================== -->

<project default="jar" basedir=".">

  <property name="src"        value=".."/>
  <property name="pspdash"    value="${src}/pspdash"/>
  <property name="data"       value="${pspdash}/data"/>
  <property name="compiler"   value="${data}/compiler"/>
  <property name="templates"  value="${pspdash}/Templates"/>

  <property name="build"      value="build/out"/>
  <property name="lib"        value="${src}/pspdash/build"/>

  <property name="applet.filename" value="DataApplet15"/>
  <property name="ns.dir" value="${build}/NS"/>
  <property name="ns.jar" value="${build}/Templates/${applet.filename}.jar"/>
  <property name="ie.dir" value="${build}/IE"/>
  <property name="ie.cab" value="${build}/Templates/${applet.filename}.cab"/>

  <path id="build.classpath">
    <pathelement path="${build}"/>
    <pathelement path="${lib}/PerlTools.jar"/>
    <pathelement path="${lib}/jfreechart.jar"/>
    <pathelement path="${lib}/jaxp.jar"/>
    <pathelement path="${lib}/crimson.jar"/>
  </path>



  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <available property="javahelp.installed"
               classname="javax.help.DefaultHelpBroker"/>
    <available property="nsobject.support"
               file="${java.home}/lib/jaws.jar"/>
  </target>



  <target name="compile" depends="init,parser"
        description="Compile the main dashboard classes" >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="build.classpath">
      <include name="pspdash/*.java"/>
      <include name="pspdash/data/**/*.java"/>
      <exclude name="pspdash/DashHelpBroker.java"/>
      <excludesfile name="list-applet-only.txt"/>
      <excludesfile name="list-ie.txt"/>
      <excludesfile name="list-ns.txt"/>
      <excludesfile name="list-dom.txt"/>
    </javac>
  </target>

  <target name="javahelp-broker" depends="compile" if="javahelp.installed"
          description="Compile the context-sensitive help support">
    <javac srcdir="${src}" destdir="${build}" classpathref="build.classpath"
       includes="pspdash/DashHelpBroker.java"/>
  </target>


  <target name="parser" depends="init,-parser-depend"
          description="Regenerate source code for the parser if necessary."
          unless="parser.upToDate">
    <!-- erase the previously generated compiler classes -->
    <delete quiet="true" dir="${compiler}/lexer"/>
    <delete quiet="true" dir="${compiler}/parser"/>
    <delete quiet="true" dir="${compiler}/node"/>
    <delete quiet="true" dir="${compiler}/analysis"/>
    <!-- run the sablecc code generator -->
    <java classpath="${lib}/sablecc.jar" fork="true"
          classname="org.sablecc.sablecc.SableCC">
      <arg value="-d"/>
      <arg file="${src}"/>
      <arg file="${compiler}/grammar.txt"/>
    </java>
    <!-- copy data files to the build output directory -->
    <copy  file="${compiler}/lexer/lexer.dat" 
           todir="${build}/pspdash/data/compiler/lexer"/>
    <copy  file="${compiler}/parser/parser.dat" 
           todir="${build}/pspdash/data/compiler/parser"/>
  </target>

  <target name="-parser-depend"
          description="Check to see if the parser needs regenerating.">
    <uptodate property="parser.upToDate"
              srcfile="${compiler}/grammar.txt"
	      targetfile="${compiler}/parser/Parser.java"/>
  </target>



  <target name="jfreechart" depends="-jfreechart-depend"
  	  unless="jfreechart.upToDate"
          description="Compile the jfreechart classes we override.">
    <javac srcdir="${templates}/reports" destdir="${build}"
           classpath="${lib}/jfreechart.jar">
      <include name="*Plot.java"/>
      <include name="DataSources.java"/>
    </javac>
  </target>

  <target name="-jfreechart-depend">
    <uptodate property="jfreechart.upToDate">
      <srcfiles dir= "${templates}/reports"
                includes="*Plot.java DataSources.java"/>
      <mapper type="glob" from="*.java"
              to="../../${build}/com/jrefinery/chart/*.class"/>
    </uptodate>
  </target>



  <target name="NSDataApplet" depends="init" if="nsobject.support"
          description="Compile the data applet support for netscape">
    <mkdir dir="${ns.dir}"/>
    <javac srcdir="${src}" destdir="${ns.dir}" 
           classpath="${java.home}/lib/jaws.jar">
      <includesfile name="list-applet-only.txt"/>
      <includesfile name="list-applet-extra.txt"/>
      <includesfile name="list-ns.txt"/>
    </javac>
    <jar destfile="${ns.jar}" basedir="${ns.dir}" includes="pspdash/"/>
  </target>



  <target name="IEDataApplet" depends="init" 
          description="Compile the data applet support for internet explorer">
    <mkdir dir="${ie.dir}"/>
    <javac srcdir="${src}" destdir="${ie.dir}" compiler="microsoft">
      <includesfile name="list-applet-only.txt"/>
      <includesfile name="list-applet-extra.txt"/>
      <includesfile name="list-ie.txt"/>
    </javac>
    <cab cabfile="${ie.cab}" basedir="${ie.dir}" includes="pspdash/"
         excludes="pspdash/data/OLEDB*Wrapper.class"/>
    <copy todir="${build}/pspdash/data">
      <fileset dir="${ie.dir}/pspdash/data" includes="OLEDB*Wrapper.class"/>
    </copy>
  </target>



  <target name="cgi-scripts" depends="compile,jfreechart"
          description="Compile the cgi scripts.">

    <!-- compile the cgi script for the size estimating template -->
    <mkdir dir="${build}/Templates/psp1"/>
    <javac srcdir="${templates}/psp1" destdir="${build}/Templates/psp1"
           classpathref="build.classpath" includes="sizeest.java"/>
    <!-- make a copy for each process that uses the size est template -->
    <copy file="${build}/Templates/psp1/sizeest.class"
          todir="${build}/Templates/psp1.1"/>
    <copy file="${build}/Templates/psp1/sizeest.class"
          todir="${build}/Templates/psp2"/>
    <copy file="${build}/Templates/psp1/sizeest.class"
          todir="${build}/Templates/psp2.1"/>
    <copy file="${build}/Templates/psp1/sizeest.class"
          todir="${build}/Templates/psp3"/>

    <!-- compile the psp3 cycle summary form -->
    <mkdir dir="${build}/Templates/psp3"/>
    <javac srcdir="${templates}/psp3" destdir="${build}/Templates/psp3"
           classpathref="build.classpath" includes="cyclesum.java"/>

    <!-- compile the generic plan summary form -->
    <mkdir dir="${build}/Templates/generic"/>
    <javac srcdir="${templates}/generic" destdir="${build}/Templates/generic"
           classpathref="build.classpath" includes="summary.java"/>

    <!-- compile the cgi scripts in the "control" subdirectory -->
    <mkdir dir="${build}/Templates/control"/>
    <javac srcdir="${templates}/control" destdir="${build}/Templates/control"
           classpathref="build.classpath" includes="*.java"/>

    <!-- compile the cgi scripts in the "dash" subdirectory -->
    <mkdir dir="${build}/Templates/dash"/>
    <javac srcdir="${templates}/dash" destdir="${build}/Templates/dash"
           classpathref="build.classpath" includes="*.java"/>

    <!-- compile the cgi scripts in the "reports/psp" subdirectory -->
    <mkdir dir="${build}/Templates/reports/psp"/>
    <javac srcdir="${templates}/reports/psp"
           destdir="${build}/Templates/reports/psp"
           classpathref="build.classpath" includes="*.java"/>

    <!-- compile the probe wizard -->
    <mkdir dir="${build}/Templates/reports/probe"/>
    <javac srcdir="${templates}/reports/probe"
           destdir="${build}/Templates/reports/probe"
           classpathref="build.classpath" includes="*.java"/>

    <!-- compile the cgi scripts in the "reports" subdirectory -->
    <javac srcdir="${templates}/reports"
           destdir="${build}/Templates/reports"
           classpathref="build.classpath">
      <include name="*.java"/>
      <exclude name="*Plot.java"/>
      <exclude name="DataSources.java"/>
    </javac>

    <!-- make a copy of the excel cgi script so the filename ends in .iqy -->
    <copy file="${build}/Templates/reports/excel.class"
          tofile="${build}/Templates/reports/excel.iqy"/>

    <!-- compile the language filters in the base "Templates" directory -->
    <javac srcdir="${templates}" destdir="${build}/Templates"
           classpathref="build.classpath" includes="*Filter.java"/>

  </target>



  <target name="jar" depends="init,compile,javahelp-broker,jfreechart,cgi-scripts"
          description="Make the jarfile for distribution">
    <jar destfile="${build}/pspdash.jar" manifest="${lib}/manifest"
         duplicate="fail">

      <!-- include the compiled files and cgi scripts -->
      <fileset dir="${build}" includes="com/ pspdash/ Templates/"
               excludes="Templates/reports/excel.class"/>

      <!-- include important non-class files in the pspdash directory -->
      <fileset dir="${src}" includesfile="list-nonclass.txt"/>

      <!-- include the template files -->
      <fileset dir="${pspdash}">
        <include name="Templates/"/>
	<excludesfile name="list-template-ignore.txt"/>
      </fileset>

      <!-- include the contents of the libraries we use -->
      <zipfileset src="${lib}/jfreechart.jar">
        <exclude name="**/XYPlot.class"/>
	<exclude name="**/PiePlot.class"/>
	<exclude name="**/DataSources.class"/>
	<exclude name="com/jrefinery/util/"/>
	<exclude name="com/jrefinery/chart/ui/"/>
      </zipfileset>
      <zipfileset src="${lib}/PerlTools.jar" excludes="META-INF/ meta-inf/"/>
      <zipfileset src="${lib}/jaxp.jar" excludes="META-INF/ meta-inf/"/>
      <zipfileset src="${lib}/crimson.jar" excludes="META-INF/ meta-inf/"/>
    </jar>
  </target>
    
</project>

