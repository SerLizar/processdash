<?xml version="1.0"?>

<!-- ===================================================================

PSP Dashboard - Data Automation Tool for PSP-like processes
Copyright (C) 2003-2006 Tuma Solutions, LLC

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

The author(s) may be contacted at:
OO-ALC/TISHD
Attn: PSP Dashboard Group
6137 Wardleigh Road
Hill AFB, UT 84056-5843

E-Mail POC:  processdash-devel@lists.sourceforge.net

========================================================================

   Build file for Process Dashboard

Notes:
   This is a build file for use with the Jakarta Ant build tool.


Prerequisites:

   * jakarta-ant from http://jakarta.apache.org

   * (optional) If you install javahelp on your system and set the
     environment variable "JAVAHELP_HOME", this script will detect
     it and compile in support for context-sensitive help. (Otherwise,
     it will just compile the web browser-based help support.)

   * (optional) To compile support for internet explorer, you must have
     the microsoft compiler and cabarc tool installed and in your path.


Build Instructions:
   To build, run

     ant <target>

   on the directory where this file is located with the target you want.


Most useful targets:

 - jar      - > creates the "pspdash.jar" package in "./build/out"
 - compile  - > recompiles the main dashboard classes


Authors:
  David Tuma, with help and advice from David Li <david@d11e.com>

==================================================================== -->

<project default="dist" basedir=".">

  <property environment="env"/>

  <property name="build"      value="bin"/>
  <property name="dist"       value="dist"/>
  <property name="lib"        value="lib"/>

  <property file="${lib}/version.properties"/>

  <property name="eng.version"     value="2.0"/><!-- VERSION -->
  <property name="eng.requires"    value="1.6.1.1+"/><!-- VERSION -->


  <property name="applet.file" value="DataApplet${dashboardVersion}"/>

  <property name="debug"      value="on"/>

  <property name="src"        value="src"/>
  <property name="processdash" value="${src}/net/sourceforge/processdash"/>
  <property name="data"       value="${processdash}/data"/>
  <property name="compiler"   value="${data}/compiler"/>
  <property name="glob"       value="${processdash}/util/glob"/>
  <property name="i18n"       value="${processdash}/i18n"/>
  <property name="cms"        value="${processdash}/net/cms"/>
  <property name="templates"  value="Templates"/>
  <property name="resources"  value="${templates}/resources"/>
  <property name="help"       value="${templates}/help"/>
  <property name="helpsearch" value="${help}/JavaHelpSearch"/>
  <property name="libsrc"     value="${lib}/src"/>
  <property name="testsrc"    value="test/src"/>
  <property name="installer"  value="installer"/>
  <property name="langpacks"
                         value="${installer}/IzPack/bin/langpacks/installer"/>
  <property name="basePkg"    value="net/sourceforge/processdash"/>
  <property name="jarsurf"    value="${basePkg}/tool/export/jarsurf"/>

  <property name="ns.dir" value="${build}/NS"/>
  <property name="ns.jar" value="${build}/Templates/${applet.file}.jar"/>
  <property name="ie.dir" value="${build}/IE"/>
  <property name="ie.cab" value="${build}/Templates/${applet.file}.cab"/>

  <property name="jfreechart.jar" value="${lib}/jfreechart-0.9.15.jar"/>
  <property name="jcommon.jar"    value="${lib}/jcommon-0.9.0.jar"/>
  <property name="kxml.jar"       value="${lib}/kxml-2.2.1-mod.jar"/>
  <property name="json.jar"       value="${lib}/json_simple.jar"/>
  <property name="l10n-tool.jar"  value="l10n-tool/dist/jrc-editor.jar"/>

  <property name="cvsroot"
     value=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/processdash"/>



  <!-- property name="build.sysclasspath" value="ignore"/ -->
  <property name="build.compiler" value="javac1.4"/>

  <path id="build.classpath">
    <pathelement location="${build}"/>
    <pathelement location="${lib}/distlib.jar"/>
    <pathelement location="${jfreechart.jar}"/>
    <pathelement location="${jcommon.jar}"/>
    <pathelement location="${kxml.jar}"/>
    <pathelement location="${json.jar}"/>
  </path>



  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <property name="version" value="${dashboard.version}.${DSTAMP}"/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/Templates"/>
    <!-- Check to see if optional packages are present -->
    <available property="javahelp.jhindexerjar"
               file ="${env.JAVAHELP_HOME}/javahelp/bin/jhindexer.jar"
               value="${env.JAVAHELP_HOME}/javahelp/bin/jhindexer.jar"/>
    <available property="javahelp.jhjar"
               file ="${env.JAVAHELP_HOME}/javahelp/lib/jh.jar"
               value="${env.JAVAHELP_HOME}/javahelp/lib/jh.jar"/>
    <available property="commondom.support"
               classname="com.sun.java.browser.dom.DOMService"/>
    <available property="nsobject.support"
               file="${java.home}/lib/jaws.jar"/>
    <available property="nsobject.support"
               file="${java.home}/lib/plugin.jar"/>
  </target>



  <target name="compile" depends="init,parser,globParser,translator,lexers"
        description="Compile the main dashboard classes" >

    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="${debug}"
           classpathref="build.classpath" target="1.4">
      <include name="net/**/*.java"/>
      <exclude name="**/*Test.java"/>
      <excludesfile name="${lib}/fileset-applet-only.txt"/>
      <excludesfile name="${lib}/fileset-ns.txt"/>
    </javac>
  </target>



  <target name="javahelp-addon" depends="ant-tasks" if="javahelp.jhjar"
          description="Package up the add-on context-sensitive help support">
    <!-- zip up the contents of the add-on -->
    <mergeJars destfile="${dist}/dashHelp.jar">
      <!-- include the contents of the javahelp distribution -->
      <jar location="${javahelp.jhjar}"/>
      <!-- include the add-on package manifest -->
      <zipfileset dir="${help}" includes="javaHelp-manifest.txt"
          fullpath="META-INF/PDASH.MF"/>
    </mergeJars>
  </target>



  <target name="import-addon">
    <jar destfile="${dist}/importPSP.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Dash-Pkg-ID" value="importPSP"/>
        <attribute name="Dash-Pkg-Version" value="1.3"/>
        <attribute name="Dash-Pkg-Name"
                   value="PSP(SM) Data Import Add-on Process Set"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <fileset dir=".">
        <include name="Templates/Import-template.xml"/>
        <include name="Templates/import/dataFile.txt"/>
        <include name="Templates/import/import.htm"/>
      </fileset>
    </jar>
  </target>



  <target name="pspForEng-addon" depends="compile">
    <!-- build the jarfile -->
    <jar destfile="${dist}/pspForEng.jar" duplicate="fail">
      <manifest>
        <attribute name="Dash-Pkg-ID" value="pspForEng"/>
        <attribute name="Dash-Pkg-Version" value="${eng.version}"/>
        <attribute name="Dash-Pkg-Requires-Version" value="${eng.requires}"/>
        <attribute name="Dash-Pkg-Name"
                   value="PSP for Engineers Add-on Process Set"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
      </manifest>

      <fileset dir=".">
        <include name="Templates/pspForEng*"/>
        <include name="Templates/pspForEng/"/>
        <include name="Templates/pspForEng2/"/>
	<exclude name="Templates/pspForEng/userdata/"/>
	<exclude name="Templates/pspForEng2/userdata/"/>
	<exclude name="Templates/pspForEng/repair.*"/>
      </fileset>
      <fileset dir="${build}" includes="net/**/PspForEngFilter.class"/>
    </jar>
  </target>



  <target name="parser" depends="init,-parser-depend"
          description="Regenerate source code for the data parser if needed."
          unless="parser.upToDate">
    <!-- erase the previously generated compiler classes -->
    <delete quiet="true" dir="${compiler}/lexer"/>
    <delete quiet="true" dir="${compiler}/parser"/>
    <delete quiet="true" dir="${compiler}/node"/>
    <delete quiet="true" dir="${compiler}/analysis"/>
    <!-- run the sablecc code generator -->
    <java classpath="${lib}/sablecc.jar" fork="true"
          classname="org.sablecc.sablecc.SableCC">
      <arg value="-d"/>
      <arg file="${src}"/>
      <arg file="${compiler}/grammar.txt"/>
    </java>
    <!-- fixup code to remove Eclipse warning -->
    <replace file="${src}/net/sourceforge/processdash/data/compiler/lexer/Lexer.java">
      <replacefilter token="this.gotoTable" value="Lexer.gotoTable"/>
      <replacefilter token="this.accept" value="Lexer.accept"/>
    </replace>
  </target>

  <target name="-parser-depend"
          description="Check to see if the data parser needs regenerating.">
    <uptodate property="parser.upToDate"
              srcfile="${compiler}/grammar.txt"
              targetfile="${compiler}/parser/Parser.java"/>
  </target>



  <target name="globParser" depends="init,-globParser-depend"
          description="Regenerate source code for the glob parser if needed."
          unless="globParser.upToDate">
    <!-- erase the previously generated compiler classes -->
    <delete quiet="true" dir="${glob}/lexer"/>
    <delete quiet="true" dir="${glob}/parser"/>
    <delete quiet="true" dir="${glob}/node"/>
    <delete quiet="true" dir="${glob}/analysis"/>
    <!-- run the sablecc code generator -->
    <java classpath="${lib}/sablecc.jar" fork="true"
          classname="org.sablecc.sablecc.SableCC">
      <arg value="-d"/>
      <arg file="${src}"/>
      <arg file="${glob}/grammar.txt"/>
    </java>
  </target>

  <target name="-globParser-depend"
          description="Check to see if the glob parser needs regenerating.">
    <uptodate property="globParser.upToDate"
              srcfile="${glob}/grammar.txt"
              targetfile="${glob}/parser/Parser.java"/>
  </target>


  <target name="lexers" depends="init,ant-tasks" 
          description="Regenerate source code for various lexers if necessary.">
    <jlexBatch dir="${src}" includes="**/*.lex"/>
  </target>



  <target name="jarsurf-list" depends="compile">
    <pathconvert property=".buildbasedir" pathsep=":" dirsep="/">
      <path path="${build}"/>
    </pathconvert>
    <pathconvert property=".jarsurf_filelist" pathsep="&#x0a;" dirsep="/">
      <path>
        <fileset dir="${.buildbasedir}">
	  <include name="${jarsurf}/*.class"/>
	  <include name="${basePkg}/ui/lib/BrowserLauncher.class"/>
        </fileset>
      </path>
    </pathconvert>
    <echo message="${.jarsurf_filelist}" file="${src}/${jarsurf}/classes.txt"/>
    <replace file="${src}/${jarsurf}/classes.txt"
             token="${.buildbasedir}" value=""/>
  </target>



  <target name="translator" depends="ant-tasks,-translator-depend"
          description="Regenerate source code for the default translation engine if necessary."
	  unless="translator.upToDate">
    <i18n-generateTranslator
        classname="net.sourceforge.processdash.i18n.DefaultEngine"
	destdir="src"
	dir="${resources}" includes="(Resources).properties"/>
  </target>

  <target name="-translator-depend"
          description="Check to see if the source code for the default translation engine needs regenerating.">
    <uptodate property="translator.upToDate"
              targetfile="${i18n}/DefaultEngine.java">
      <srcfiles dir=".">
        <include name="${resources}/(Resources).properties"/>
        <include name="lib/src/net/sourceforge/processdash/i18n/GenerateTranslatorTemplate.lex"/>
      </srcfiles>
    </uptodate>
  </target>



  <target name="NSDataApplet" depends="init" if="nsobject.support"
        description="Compile the data applet support for netscape and W3C dom">
    <mkdir dir="${ns.dir}"/>
    <javac srcdir="${src}" destdir="${ns.dir}" debug="${debug}"
           includeAntRuntime="no" includeJavaRuntime="no" target="1.1">
      <bootclasspath>
      </bootclasspath>
      <classpath>
         <pathelement location="${java.home}/lib/jaws.jar"/>
         <pathelement location="${java.home}/lib/plugin.jar"/>
      </classpath>
      <includesfile name="${lib}/fileset-applet-only.txt"/>
      <includesfile name="${lib}/fileset-applet-extra.txt"/>
      <includesfile name="${lib}/fileset-ns.txt"/>
    </javac>
    <jar destfile="${ns.jar}" basedir="${ns.dir}" includes="net/"/>
  </target>

  <target name="ant-tasks">
    <javac srcdir="${libsrc}" destdir="${libsrc}" debug="true"
           includeAntRuntime="yes">
      <exclude name="net/sourceforge/processdash/ExtractAllBackups.java"/>
    </javac>
    <taskdef file="${libsrc}/net/sourceforge/processdash/taskdef.properties"
             classpath="${libsrc}"/>
  </target>



  <target name="jar" description="Make the jarfile for distribution"
          depends="ant-tasks,init,compile,javahelp,l10n-tool,jarsurf-list">
    <svnRevInfo property="svnRevision"/>
    <jar destfile="${dist}/pspdash.jar" duplicate="fail">
      <!-- specify the manifest file contents -->
      <manifest>
        <attribute name="Main-Class"
	    value="net.sourceforge.processdash.ProcessDashboard"/>
        <attribute name="Dash-Pkg-ID" value="pspdash"/>
        <attribute name="Dash-Pkg-Version" value="${version}"/>
        <attribute name="Dash-Pkg-Name" value="Process Dashboard"/>
        <attribute name="Dash-Pkg-URL"
                   value="http://processdash.sourceforge.net/cgi-bin/update"/>
        <attribute name="Dash-Svn-Revision" value="${svnRevision}"/>
      </manifest>

      <!-- include the compiled files and cgi scripts -->
      <fileset dir="${build}" excludesfile="${lib}/fileset-nonclass.txt">
          <include name="org/"/>
          <include name="Templates/"/>
          <include name="net/"/>
	  <exclude name="**/*Test.class"/>
	  <exclude name="net/**/PspForEngFilter.class"/>
      </fileset>

      <!-- include important non-class files in the src directory -->
      <fileset dir="${src}" includesfile="${lib}/fileset-nonclass.txt"/>

      <!-- include the template files -->
      <fileset dir=".">
        <include name="Templates/"/>
	<exclude name="Templates/data.js"/> <!-- temp change -->
        <excludesfile name="${lib}/fileset-template-ignore.txt"/>
      </fileset>

      <zipfileset dir="." includes="Templates/data2.js"
               fullpath="Templates/data.js"/> <!-- temp change -->

      <!-- include the contents of the libraries we use -->
      <zipfileset src="${jcommon.jar}"/>
      <zipfileset src="${jfreechart.jar}"/>
      <zipfileset src="${kxml.jar}"/>
      <zipfileset src="${json.jar}"/>
      <zipfileset src="${lib}/jfreechart_ja.zip"/>
      <zipfileset src="${lib}/jfreechart_zh.zip"/>
      <zipfileset src="${lib}/distlib.jar" excludes="**/*.java"/>
      <zipfileset src="${l10n-tool.jar}"/>
    </jar>
  </target>



  <!-- =================================================================== -->
  <!-- Update the JavaHelp                                                 -->
  <!-- =================================================================== -->
  <target name="javahelp"
          depends="init,-javahelp-depend,-javahelp-index,-javahelp-book"/>

  <!-- invoke the jhindexer -->
  <target name="-javahelp-index" depends="init,-javahelp-depend"
          if="javahelp.jhindexerjar" unless="javahelp.upToDate">
    <!-- delete the previous contents of the JavaHelpSearch dir -->
    <delete dir="${helpsearch}" quiet="true"/>
    <mkdir dir="${helpsearch}"/>

    <!-- refresh the help.config file -->
    <pathconvert property=".jhbasedir" pathsep=":" dirsep="/">
      <path id=".jhbasedir.path" path="${help}"/>
    </pathconvert>
    <pathconvert property=".jhfilelist" pathsep=":" dirsep="/">
      <path>
        <fileset dir="${help}" includes="Topics/**/*.html">
	  <exclude name="Topics/Overview/disc-eng.html"/>
	  <exclude name="Topics/AdvancedTopics/ProcessDefinition/DataFileFunctions.html"/>
        </fileset>
      </path>
    </pathconvert>
    <echo message="${.jhfilelist}" file="${help}/help.config"/>
    <replace file="${help}/help.config" token="${.jhbasedir}/" value="File "/>
    <replace file="${help}/help.config">
      <replacetoken>:</replacetoken>
      <replacevalue><![CDATA[
]]></replacevalue>
    </replace>

    <!-- invoke jhindexer to rebuild the help indexes -->
    <java jar="${javahelp.jhindexerjar}" dir="${help}" fork="true">
      <arg value="-c"/>
      <arg value="help.config"/>
    </java>
  </target>

  <!-- regenerate the "book.html" file -->
  <target name="-javahelp-book" depends="-javahelp-depend"
          unless="javahelp.upToDate">
    <xslt in="${help}/TOC.xml" out="${help}/TOC.html"
          style="${help}/makeTOC.xslt"/>
    <xslt in="${help}/TOC.xml" out="${help}/Skeleton.html"
          style="${help}/makeSkeleton.xslt"/>

    <java classpath="${lib}/DocSpider.jar" classname="DocSpider"
          fork="true" dir="${help}">
      <arg value="Skeleton.html"/>
      <arg value="book.html"/>
      <arg value="none"/>
      <arg value="-nostatus"/>
    </java>
    <delete file="${help}/Skeleton.html"/>
  </target>

  <!-- check to see if help needs updating -->
  <target name="-javahelp-depend">
    <uptodate property="javahelp.upToDate" targetfile="${helpsearch}/TMAP">
      <srcfiles dir="${help}">
        <include name="**/*.html"/>
        <include name="**/*.htm"/>
        <include name="*.xml"/>
        <include name="PSPDash.hs"/>
        <exclude name="TOC.html"/>
        <exclude name="Skeleton.html"/>
        <exclude name="book.html"/>
      </srcfiles>
    </uptodate>
  </target>


  <!-- =================================================================== -->
  <!-- Installer                                                           -->
  <!-- =================================================================== -->

  <target name="installer" depends="installer-mergeJar,installer-langpacks">
    <ant antfile="${installer}/build.xml" inheritAll="false">
      <property name="alreadyRebuilt" value="true"/>
      <property name="dontCleanDist" value="true"/>
      <property name="dist" value="../dist"/>
    </ant>
  </target>

  <target name="installer-mergeJar" depends="compile">
    <classfileset id="installer-mergeJar-classes" dir="bin2"
      rootclass="net.sourceforge.processdash.InternalSettings"/>
    <jar destfile="${installer}/files/mergeSettings.jar" duplicate="fail">
      <manifest>
        <attribute name="Main-Class"
	    value="net.sourceforge.processdash.InternalSettings"/>
      </manifest>
      <fileset refid="installer-mergeJar-classes"/>
    </jar>
  </target>

  <target name="installer-langpacks" depends="ant-tasks">
    <i18n-updateLangpack resourcesDir="${resources}" javaLang="ja"
	langpack="${langpacks}/jpn.xml"
	textfile="${installer}/files/text-jpn.xml"/>
    <i18n-updateLangpack resourcesDir="${resources}" javaLang="zh"
	langpack="${langpacks}/chn.xml"
	textfile="${installer}/files/text-chn.xml"/>
  </target>


  <!-- =================================================================== -->
  <!-- Internationalization / Localization                                 -->
  <!-- =================================================================== -->

  <target name="l10n-tool">
    <ant dir="l10n-tool" inheritAll="false"/>
  </target>

  <target name="check-res" depends="ant-tasks">
    <i18n-orphans dir="Templates" includes="**/*.properties"/>
  </target>


  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean">
    <delete quiet="true" dir="${build}"/>
    <delete quiet="true" dir="${compiler}/lexer"/>
    <delete quiet="true" dir="${compiler}/parser"/>
    <delete quiet="true" dir="${compiler}/node"/>
    <delete quiet="true" dir="${compiler}/analysis"/>
    <delete quiet="true" dir="${glob}/lexer"/>
    <delete quiet="true" dir="${glob}/parser"/>
    <delete quiet="true" dir="${glob}/node"/>
    <delete quiet="true" dir="${glob}/analysis"/>
    <delete quiet="true" file="${i18n}/DefaultEngine*"/>
    <delete quiet="true" file="${cms}/SnippetHtmlPostprocessor.dat"/>
    <delete quiet="true" file="${cms}/SnippetHtmlPostprocessor.java"/>
    <delete quiet="true" dir="${helpsearch}"/>

    <delete quiet="true" file="${dist}/pspdash.jar"/>
    <delete quiet="true" file="${dist}/dashHelp.jar"/>
    <delete quiet="true" file="${dist}/importPSP.jar"/>
    <delete quiet="true" file="${dist}/pspForEng.jar"/>
    <delete quiet="true" file="${dist}/pdash-src-*.zip"/>
    <delete><fileset dir="${libsrc}" includes="**/*.class"/></delete>
  </target>


  <!-- =================================================================== -->
  <!-- Create distributable files                                          -->
  <!-- =================================================================== -->
  <target name="dist"
      depends="jar,javahelp-addon,import-addon,pspForEng-addon"/>

  <target name="dist-src" depends="ant-tasks">
    <svnzip dir="." dest="${dist}/pdash-src-${dashboard-version}.zip"/>
  </target>

  <target name="dist-all" depends="dist,dist-src,installer"/>

  <!-- =================================================================== -->
  <!-- Create miscellaneous other items                                    -->
  <!-- =================================================================== -->

  <target name="securityTestJar" depends="dist">
    <property name="stpkg" value="net/sourceforge/processdash/security"/>
    <javac srcdir="${testsrc}" destdir="${testsrc}" debug="true"
           classpath="${dist}/pspdash.jar"
           includes="${stpkg}/CgiSecurityTest.java"/>
    <jar destfile="${dist}/securityTest.jar" duplicate="fail">
      <fileset dir="${testsrc}" includes="${stpkg}/CgiSecurityTest*.class"/>
      <zipfileset dir="test/src/${stpkg}" includes="*.link"
          prefix="Templates/dash"/>
    </jar>
    <delete>
      <fileset dir="${testsrc}" includes="${stpkg}/CgiSecurityTest*.class"/>
    </delete>
  </target>

  <target name="p4diff">
    <classfileset id="p4locClasses" dir="bin2"
      rootclass="net.sourceforge.processdash.tool.diff.impl.PerforceLOCDiff"/>
    <jar destfile="${dist}/p4diff.jar" duplicate="fail">
      <manifest>
        <attribute name="Main-Class"
	    value="net.sourceforge.processdash.tool.diff.impl.PerforceLOCDiff"/>
      </manifest>
      <fileset refid="p4locClasses"/>
      <fileset dir=".">
        <include name="Templates/resources/(Resources)*"/>
        <include name="Templates/resources/LOCDiff*"/>
      </fileset>
    </jar>
  </target>

  <target name="customjar">
    <jar destfile="${dist}/custom-report-fix.jar" basedir="." includes="Templates/reports/custom/create.shtm">
      <manifest>
        <attribute name="Dash-Pkg-ID" value="customReportFix"/>
        <attribute name="Dash-Pkg-Version" value="1.0"/>
        <attribute name="Dash-Pkg-Name" value="Fix for Bug #1289863"/>
        <attribute name="Dash-Pkg-Requires-Version" value="1.7b.20050609"/>
      </manifest>
    </jar>
  </target>

</project>

<!--

Still missing items:

============================================================
From pspdash/GNUmakefile:

DISABLED_WARNINGS=directory-index,img-alt,extension-attribute,extension-markup,attribute-delimiter

weblint:
        weblint -d $(DISABLED_WARNINGS) Templates | \
        grep -v -f weblint-ignore


-->
